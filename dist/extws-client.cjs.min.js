"use strict";var t=(t={})=>({emit(e,...s){(t[e]??[]).forEach((t=>t(...s)))},on:(e,s)=>(t[e]=(t[e]??new Set).add(s),()=>t[e].delete(s)),once(t,e,s){return s=this.on(t,((...t)=>{s(),e(...t)}))}}),e=self.WebSocket;const s=1,i=2,n=3,o=4;function _(t,e,s){let i=String(t);return s&&(i+=s),e&&(i+=JSON.stringify(e)),i}const c=new Set(["[","{"]);const r=new Set([e.CLOSING,e.CLOSED]),d={connect:!0,reconnect:!0,reconnect_interval:2e3,ping_timeout:5e3};module.exports=class{constructor(e,s={}){this.url=new URL(e),this.options=s,this._ws=null,this._emitter=t(),this._toid_ping=null,this._toid_dead=null,this._toid_reconnect=null,!0===this._getOption("connect")&&setTimeout((()=>self.connect())),this.on("disconnect",(()=>{this._ws=null,!0===this._getOption("reconnect")&&(clearTimeout(this._toid_reconnect),this._toid_reconnect=setTimeout((()=>this.connect()),this._getOption("reconnect_interval")))}))}_getOption(t){return this.options[t]??d[t]}get is_connected(){return this._ws&&!0!==r.has(this._ws.readyState)&&Date.now()-this._ws._extws.ts_last_message<this._ws._extws.idle_timeout}get id(){return this._ws._extws.socket_id}_createPing(){clearTimeout(this._toid_ping),this._ws&&(this._toid_ping=setTimeout((()=>this._sendPing()),this._ws._extws.idle_timeout-this._getOption("ping_timeout")))}_sendPing(){clearTimeout(this._toid_dead),this.is_connected&&(this._ws.send(_(i)),this._toid_dead=setTimeout((()=>self.disconnect()),1e3*this._getOption("ping_timeout")))}connect(){if(this.is_connected)return;this._ws&&this._ws.close(),this._emitter.emit("beforeconnect");const t=this._ws=new e(this.url);t._extws={socket_id:null,idle_timeout:6e4,ts_last_message:0},t.addEventListener("error",(t=>{console.error(t)})),t.addEventListener("open",(()=>{t._extws.ts_last_message=Date.now(),this._emitter.emit("connect"),this._createPing()})),t.addEventListener("message",(e=>{clearTimeout(this._toid_dead),this._createPing(),t._extws.ts_last_message=Date.now();const{type:r,data:d,event_type:h}=function(t){const e={type:t.charCodeAt(0)-48};let s=1,i="";for(let e=s;e<t.length&&!1===c.has(t[e]);e++)i+=t[e],s++;return i.length>0&&(e.event_type=i),s<t.length&&(e.data=JSON.parse(t.slice(s))),e}(e.data);switch(r){case s:t._extws.socket_id=d.id,t._extws.idle_timeout=1e3*d.idle_timeout;break;case i:t.send(_(n));break;case o:this._emitter.emit(h??"message",d)}})),t.addEventListener("close",(()=>{t._extws.ts_last_message=0,this._emitter.emit("disconnect")}))}disconnect(){clearTimeout(this._toid_reconnect),this._ws&&this._ws.close()}on(...t){return this._emitter.on(...t)}once(...t){return this._emitter.once(...t)}emit(t,e){void 0===e&&"string"!=typeof t&&(e=t,t=void 0),this.is_connected&&this._ws.send(_(o,e,t))}};
